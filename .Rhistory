A instalação de pacotes é uma etapa crucial na realização de análise de dados e deve ser feita seguindo os passos a seguir:
#| warning: false
library(gsheet)
library(tidyverse)
library(ggthemes)
library(dplyr)
library(patchwork)
notas <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1092065531")
notas1 <- notas %>%
select(prova, nota) %>%
filter(prova == "1")
notas1
notas2 <- notas %>%
select(prova, nota) %>%
filter(prova == "2")
notas2
media1 <- mean(notas1$nota)
media2 <- mean(notas2$nota)
#Gerei um gráfico das notas da prova 1
plot1 <- notas1 %>%
ggplot(aes(x = nota)) +
geom_histogram(bins = 5, fill = "darkmagenta", color = "black") +
labs(y = "Frequência",
x = "Nota", title = "Prova 1") +
geom_vline(xintercept = media1 , color = "black", linetype = "dashed") +
annotate(geom = "text",
x= 66,
y = 7.5,
label = "Média: 79.55") + ylim(0,10) +
theme_few()
plot1
#Gerei um gráfico das notas da prova 2
plot2 <- notas2 %>%
ggplot(aes(x = nota)) +
geom_histogram(bins = 5, fill = "steelblue", color = "black") +
labs(y = "Frequência",
x = "Nota", title = "Prova 2") +
geom_vline(xintercept = media1 , color = "black", linetype = "dashed") +
annotate(geom = "text",
x= 66.5,
y = 7.5,
label = "Média: 79.26") +  ylim(0,10) +
theme_few()
plot2
#Carreguei o pacote "library(patchwork)" e através do "|" coloquei os dois gráficos lado a lado.
(plot1|plot2)
notas_resumo <- notas %>%
group_by(prova) %>%
summarise(media = mean(nota), sd = sd(nota))
notas_resumo %>%
ggplot(aes(x = as.factor(prova), y = media)) +
geom_point() +
geom_errorbar(aes(ymin = media - sd, ymax = media + sd), width = 0.1, color = "darkmagenta") +
theme_few() + ylim(0,100)+
labs( x = "Provas",
y = "Nota")
notas %>%
ggplot(aes(x = as.factor(prova),
y = nota)) +
geom_errorbar(stat = "boxplot", width = 0.1, size = 1) + #o limite da barra de erros que segue o padrão do boxplot
geom_boxplot(width = 0.5, fill = "#C2A5CF") + #width- mexe na largura da caixa
geom_point(stat = "summary", fun = "mean", shape = 4, size = 2, color = "red") + #a média é representada por um "X", onde eu utlizei o resumo do meus dados, utilizando a função média.
labs (x = "Prova",
y = "Notas")+
geom_jitter(alpha = 0.6, height = 0, width = 0.25, color = "black", size = 1.5) + #alpha - transparencia dos meus pontos
theme_few() + ylim(0,100)
library(gsheet)
library(tidyverse)
library(ggthemes)
library(dplyr)
library(patchwork)
library(rnaturalearth)
library(remotes)
remotes::install_github("ropensci/rnaturalearthhires")
BRA <- ne_states(country = "Brazil",
returnclass = "sf")
world <- ne_countries()
library(tidyverse)
ggplot(BRA) +
geom_sf(fill = "white")
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth =0.3)
BRA <- ne_states(country = "Peru",
returnclass = "sf")
world <- ne_countries()
#library(tidyverse)
ggplot(BRA) +
geom_sf(fill = "white")
BRA <- ne_states(country = "Colombia",
returnclass = "sf")
world <- ne_countries()
#library(tidyverse)
ggplot(BRA) +
geom_sf(fill = "white")
BRA <- ne_states(country = "Brazil",
returnclas = "sf")
BRA1 <- ne_countries(country = "Brazil",
returnclas = "sf")
wordd <- ne_countries()
ggplot(BRA1) +
geom_sf(fill = "white")
library(r4pde)
sbr <- RustSoybean
sbr |>
ggplot(aes(longitude, latitude)) +
geom_point() +
coord_sf()
# juntar a camada de ponto e sobrepor o mapa
library(ggthemes)
BRA <- ne_states(country = "Brazil",
returnclass = "sf")
world <- ne_countries()
#library(tidyverse)
ggplot(BRA) +
geom_sf(fill = "white")
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth =0.3) +
geom_point(data = sbr, aes(longitude, latitude),
color = "white") +
theme_map()
BRA <- ne_states(country = "Brazil",
returnclass = "sf")
MG <- BRA |>
filter(name_en == "Minas Gerais")
ggplot(BRA) +
geom_sf(fill = "white")
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth =1) +
geom_sf(data = MG, fill = "white") +
geom_point(data = sbr, aes(longitude, latitude),
color = "red") +
theme_map()
ggplot(BRA)  +
geom_sf(data = MG, fill = "white") +
# geom_point(data = sbr, aes(longitude, latitude),
# color = "red") +
theme_map()
library(ggspatial)
ggplot(BRA) +
geom_sf(fill = "white")
ggplot(BRA) +
geom_sf(fill = "black",
color = "white",
linewidth = 0.3) +
# geom_sf(data = MG, fill = "white") +
geom_point(data = sbr, aes(longitude, latitude),
color = "white") +
theme_map() +
annotation_north_arrow(which_north = "grid")
bra <-ggplot(BRA) +
geom_sf(fill = "black",
color = "white",
linewidth = 0.3) +
geom_sf(data = MG, fill = "black") +
geom_point(data = sbr, aes(longitude, latitude),
color = "white") +
theme_map() +
annotation_north_arrow(which_north = "grid")
library(plotly)
ggplotly(bra)
library(leaflet)
leaflet() |>
addTiles() |>
setView(lng = -42.8825 , lat = -20.7546, zoom = 15)
library(leaflet)
leaflet() |>
addProviderTiles(providers$Esri.NatGeoWorldMap) |>
setView(lng = -42.8825 , lat = -20.7546, zoom = 5)
library(leaflet)
leaflet(sbr) |>
addTiles() |>
#setView(lng = -42.8825 , lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
BRA <- ne_states(country = "Brazil",
returnclass = "sf")
library(ggrepel)
library(scatterpie)
#geom_scatterpie --> Para fazer o grafico de pizza e legenda com as doenças ocorrentes.
# geom_text_repel(data = mapa, aes(lon, lat, label = Local)) --> Para colocar os nomes da cidade no mapa.
library(gsheet)
mapa <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit#gid=50258992")
library(gsheet)
mapa <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit#gid=50258992")
library(ggrepel)
library(scatterpie)
ggplot(BRA) +
geom_sf(fill = "gray70", alpha = 0.5, color = "white") +
coord_sf()+
geom_scatterpie(aes(x = lon, y = lat, r = 0.6), alpha = 0.8, color = NA, data = mapa,
cols = c("DFC",
"MA",
"FER",
"ANTR",
"OIDIO"))+
geom_text_repel(data = mapa, aes(lon, lat, label = Local),
size = 2, nudge_x = 0.2, nudge_y = 0.27, color = "gray30", family = "Arial") +
ggthemes::scale_fill_calc()+
ggthemes::theme_map() +
labs(x = "Longitude", y = "Latitude", legend = "", fill = "Doença")+
theme(legend.position = "bottom", text = element_text(family = "Arial", size = 8))
