---
title: "aula 6"
author: "Beatriz"
format: html
editor: visual
---

##Inferencial

###Dois grupos independentes

```{r}

library (gsheet)
mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137")
```

##visualizar

```{r}
library(tidyverse)
mg |> 
  ggplot(aes(trat, comp))+
  geom_boxplot()
```

###Para realizaro t.test os dados estão no formato longo, para realizar o test T os mesmos devem estar no fomrato largo

```{r}
mg2 <- mg |> 
  pivot_wider(names_from = trat,
              values_from = comp)

```

###Test t \### Primeiro verificar se os dados atendem os pressupostos de normalidade e homogeneidade

```{r}
#Normalidade com shapiro

shapiro.test(mg2$Mg2)
shapiro.test(mg2$control)

qqnorm(mg2$Mg2)
qqline(mg2$Mg2)

qqnorm(mg2$control)
qqline(mg2$control)

hist( mg2$Mg2)
hist(mg2$control)


# Homogeneidade das variãncias
var.test(mg2$control, mg2$Mg2)


#se a variancia não for homogenea usa o var.aqual = FALSE 
t.test(mg2$control, mg2$Mg2,
       var.equal = TRUE)

#pacote report da uma sugestão de texto relatando a saída do teste T
library(report)
report(teste1)

```

###grafico final

```{r}
mg |> 
  ggplot(aes(trat, comp))+
  geom_boxplot()+
  #geom_point()+
  stat_summary(fun="mean",
               geom = "point", 
               size = 3, color = "blue")+
  annotate("text", x= 2, y= 15, label = "P < 0,01")
```

###Dois grupos dependentes

```{r}

escala <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1729131173")

#VISUALIZAR
escala |>
  ggplot(aes(assessment, acuracia))+
  geom_boxplot()

```

### Passar para formato largo

```{r}
escala2 <- escala |> 
  dplyr::select(assessment, rater, acuracia) |> 
  pivot_wider(names_from = assessment,
              values_from = acuracia)
```

###T.test \### testar pressupostos

```{r}
#normalidade
shapiro.test(escala2$Unaided)
shapiro.test(escala2$Aided1)
#não regeita a hipótese nula, a distribuição é normal

#homogeneidade
var.test(escala2$Unaided, escala2$Aided1)
# Nãocregeita a hipotese nula porque é menor que 0,005. 
#Tem que indicar no teste t que as variancias não são homogêneas

#TEST T
t.test(escala2$Unaided, escala2$Aided1,
       paired = TRUE,
       var.equal = FALSE)
#Existe diferença entre Unaided e Aided1

```

###teste não paramétrico para quando os dados não forem normais

```{r}
wilcox.test(escala2$Aided1, 
            escala2$Unaided, 
            paired = TRUE)
```

###grafico final

```{r}
escala |> 
  ggplot(aes(reorder(assessment, acuracia), acuracia,
             group = rater))+
  geom_point(stat = "identity", size = 3, shape = 1)+
  geom_line(size = 1, color = "gray")+
  annotate("text",
           x = 2.3,
           y= 0.9,
           label = "P < 0.001")
```

### Três ou mais grupos

### Para três ou mais grupos faz ANOVA

```{r}
library(gsheet)
micelial <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=959387827")

```

###visualizar

```{r}
library(tidyverse)
micelial |> 
  ggplot(aes(especie, tcm))+
  geom_jitter(width = 0.05)+
  geom_boxplot()

```

###ANOVA

```{r}
#para fazer anova, pode usar tanto a função "aov" quanto a "lm"

m2 <- aov(tcm ~ especie, data = micelial)
anova(m2)

#lm é mais usada
m1 <- lm(tcm ~ especie, data = micelial)
anova(m1)

```

### verificar se as premissas são atendidas

```{r}
#normalidade dos RESÍDUOS da anova
shapiro.test(m1$residuals)

hist(m1$residuals)

qqnorm(m1$residuals)
qqline((m1$residuals))

check_normality(m1)

#variãncias homogêneas
library(performance)
check_heteroscedasticity(m1)

#outro pacote para verificar normalidade e homogeneidade
library(DHARMa)
plot(simulateResiduals(m1))
```

### qual espécie difere ?

### fazer teste de comparação de médias

```{r}
#estimativa das médias
library(emmeans)
means_m1 <- emmeans(m1, ~ especie)
means_m1

means_m1df <- data.frame(means_m1)

means_m1df |> 
  ggplot(aes(especie, emmean))+
  geom_point()+
  geom_errorbar(aes(min = lower.CL,
                    max = upper.CL),
                width = 0.1)

#comparação de médias
pwpm(means_m1)
#compara as especies(fatores)

#pacote saída com letras
library(multcomp)
library(multcompView)
cld(means_m1)
```
