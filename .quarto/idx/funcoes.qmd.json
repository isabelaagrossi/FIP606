{"title":"Operadores básicos","markdown":{"yaml":{"title":""},"headingText":"Operadores básicos","containsRefs":false,"markdown":"\n\n\n\n#### Operador de atribuição\n\n```{r}\n\n# <- \n# =\n\na <- 1\nb = 1\na\n\n```\n\n#### Vetores numéricos - individuais\n\nExemplos de vetores numéricos - Inteiro e decimal\n\n```{r}\n\n\n# Númerico inteiro\nserie1 <- c(1:4)\n\n# Númerico decimal \nserie2 <- c(1.5,2.5,3.5,4.5)\n\n# Caractere\nserie3 <- c(\"um\", \"dois\", \"tres\", \"quatro\")\n\n# Booleano (verdadeiro ou falso)\nserie4 <- c(TRUE, FALSE, FALSE, FALSE)\n\n#serie4: binario \n#Vetores independentes\n\n```\n\n#### Vetor de caractere - individuais\n\n```{r}\n\na <- \"Isabela - qualquer texto com mais de uma palavra\"\na <- c(\"um\", \"dois\", \"tres\")\n\n```\n\n## Criando data frame\n\nNesta etapa iremos criar um dataframe (base de dados) a partir de variaveis individuais que foram criadas previamente. A principal caracteristica de um data frame é possuir linha e colunas.\n\nCria uma tabela com variaveis (pode ser diferentes - numerica inteira, decimal, caractere.. ) de mesmo tamanho para visualizar meus dados.\n\nObs: cars- já é um data frame, que tem o \"speed\" e o \"dist\" como variavel. Se quiser criar um data frame a partir de outro data frame so precisa do sinal de atribuição (<-)\n\n\n\n## Exporando os dados:\n\n### Importa dados\n\n```{r}\n\nlibrary(tidyverse)\n\ncr <- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n\n\n\n\n```\n\n### Aprender a exportação:\n\nPacote que permite fazer essa exportação é **writexl**\n\n-   A partir do data frame vamos exportar para um formato `.xlsx` ou `.csv`\n\n```{r}\n\nlibrary(writexl)\n\nwrite_xlsx(cr, \"cr.xlsx\")\n\nwrite_csv(cr, \"cr.csv\")\n\n\n```\n\n## Funções de manipulação de dados:\n\nIremos rever algumas funções ou verbos do pacote **dplyr**\n\n### `Select()`\n\n-   Variação de como selecionar as colunas utilizando os criterios.\n\n```{r}\n\n# Estou selecionando apenas algumas colunas, 1 a 10 e a coluna 13.\n\ncr %>% \n  select(1:10, 13)\n\n \n# Posso selecionar as coluna por nomes. \n\ncr %>% \n  select(farm, region, inc, sev2)\n\n\n# Selecionei todas as colunas, menos a \"sev2\".\n\ncr %>% \n  select(-sev2)\n\n\n# Para quando tem muitas colunas que quero excluir.\n\ncr %>% \n  select(- c(inc, sev2))\n\n \n\n```\n\n### `Filter()`\n\n-   Filtar apenas linhas especificas.\n\n```{r}\n\ncr %>% \n  select(farm, region, inc) %>% \n  filter(inc > 50)\n\n\ncr %>% \n  select(farm, region, inc) %>% \n  filter(region == \"SNNPR\")\n  \n\n\ncr %>% \n  select(farm, region, zone, inc) %>% \n  filter(zone == \"Bench Maji\")\n\n\n#Estou pegando todas as zonas menos a Bench MAji. **\"!=\"**\ncr %>% \n  select(farm, region, zone, inc) %>% \n  filter(zone != \"Bench Maji\")\n\n\n\n# Criando outro data frame: Criando um subconjunto do \"cr\". \n\ncr2 <- cr %>% \n  select(farm, region, zone, inc) %>% \n  filter(zone != \"Bench Maji\")\n\n\n\n\n\n```\n\n##### Outro operador dentro do filtro que permite selecionar mais de uma condição dentro do nome zone. Estou selecionando duas zonas \"Bench Maji\", \"Keffa\".\n\n`%in%`\n\n```{r}\n\ncr2 <- cr %>% \n  select(farm, region, zone, inc) %>% \n  filter(zone %in% c(\"Bench Maji\", \"Keffa\"))\n\n\n\n\ncr %>% \n  select(farm, region, zone, inc) %>% \n  filter(region == \"SNNPR\") %>% \n  filter(zone != \"Sidama\")\n\n\n```\n\n### Para exportar esse data frame \"cr2\"\n\n```{r}\n\ncr2 <- cr %>% \n  select(farm, region, zone, inc) %>% \n  filter(zone != \"Bench Maji\")\n\n\nwrite_xlsx(cr2, \"cr2.xlsx\")\n\n\n```\n\n### Sumarização\n\n`Count()`: Vai contar alguma coisa, para não ter que ficar contando um por um na tabela.\n\n```{r}\n\ncr %>%\n  count(zone)\n  \n# Contar quantas zonas tenho em cada distrito. Deixa meu arquivo em formato longo, onde repete os nome da zone. \n\ncr %>%\n  count(zone, district)\n\n\n\n```\n\n**OBS:** Podemos fazer a mesma coisa do `count()`, utilizando o `tally()`\n\n`group_by`\n\n```{r}\n\ncr %>%\n  group_by(zone, district) %>% \n  tally()\n\n\n```\n\n### Tabela de contigencia:\n\nPara saber quantas ocorrencias tem, fazendo o cruzamento de region e cultivar, como se fosse uma tabela.\n\nUtiliza o pacote **janitor** que tem a função `tabyl`\n\n-   A função `tabyl` é muito parecido com o `count()`, porém ele tras o nome das zonas, as contagem e o percentual. Isso quando selecionamos apenas uma coluna (zone).\n\n```{r}\n\nlibrary(janitor)\n\ncr %>%\n  tabyl(zone)\n\n\n\n# Tabela de contigencia: \n\ncr %>%\n  tabyl(zone, cultivar)\n\n  \ncr %>%\n  tabyl(cultivar, shade)\n\n\n\n# Separa em duas tabela por região, quando utilizamos 3 variaveis (cultivar, shade, region). \n\ncr %>%\n  tabyl(cultivar, shade, region)\n\n\n```\n\n**OBS:** - Para fazer um gráfico com a tabela de contigencia, é melhor usar o `count()` do que o `tabyl()`, porque ela precisa estar em formato longo. - O tabyl é mais interessante para olhar os valores e não para fazer gráfico.\n\n```{r}\n\ncr %>%\n  count(cultivar, shade)\n\n\n```\n\n\n### `Arrange()`\n\n-   Faz uma reordenação para fins de visualização\n\n```{r}\n\n\n# Ordena do menor para o maior:\ncr %>%\n  count(zone, shade) %>% \n  arrange(n)\n\n# Ordena por ordem alfabetica: \ncr %>%\n  count(zone, shade) %>% \n  arrange(shade)\n\n```\n\n# Exemplo com aplicação e visualização gráfica das funções e verbos do **dplyr**\n\n### Importa os dados\n\n```{r}\n\nlibrary(tidyverse)\ncr <- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\nglimpse(cr)\n\n```\n\n### Visualização\n\n-   Vamos utilizar a função `ggplot` do pacote **ggplot2** para visualizar os dados do conjunto.\n\n```{r}\n\nlibrary(ggthemes)\ncr %>% \n  ggplot(aes(x= sev2, \n             fill = region)) + \n  geom_histogram() + \n  facet_grid(region ~ cultivar) + \n  scale_fill_manual(values = c(\"red\", \"blue\")) +\n  theme_minimal(base_size = 14) + \n  theme(legend.position = \"bottom\") + \n  labs(y  = \"Frequency\", \n       x = \"Severity (%)\", \n       fill = \"Region\" )\n\n\n```\n\n```{r}\n\nglimpse(cr)\nlibrary(ggthemes)\n\ncr %>% \n  ggplot(aes(x= sev2, \n             fill = region)) + \n  geom_histogram(color = \"white\") + \n  facet_wrap(region ~ cultivar, ncol = 2) +\n  scale_fill_manual(values = c(\"red\", \"blue\")) +\n  theme_minimal(base_size = 14) + \n  theme(legend.position = \"bottom\") + \n  labs(y  = \"Frequency\", \n       x = \"Severity (%)\", \n       fill = \"Region\" )\n\n\n\n\n```\n\n```{r}\nsummary(cr$inc)\n\ncr %>% \n  group_by(cultivar) %>% \n  summarize(sev_med= median(sev2), sev_mean = mean(sev2), sev_sd = sd(sev2))\n\ncr %>% \n  ggplot(aes(inc, sev2)) + geom_point()\n```\n\n### Seleção e filtro\n\nSeleção de coluna e filtragem de linhas\n\n```{r}\ncr %>%\n  select( farm, region,cultivar, sev2)\n```\n\n```{r}\ncr2 <- cr %>%\n  select( farm, region,cultivar, sev2)\n```\n\n### Filtra linhas do meu conjunto\n\n```{r}\n\ncr2 <- cr %>% \n  select(farm, region, cultivar, sev2) %>% \n  filter(region == \"Oromia\")\n\ncr2\n```\n\n### Cria subconjuntos\n\nUtiliza as funções `select()` e `filter()` do pacote **dplyr** para selecionar colunas e linhas, respectivamente.\n\n```{r}\n#filtra Oromia\ncr_oromia <- cr %>% \n  select(farm, region, cultivar, sev2) %>% \n  filter(region == \"Oromia\")\n\ncr_oromia\n\n\n\n\n#filtra SNNPR\ncr_pr <- cr %>% \n select(farm, region, cultivar, sev2) %>% \n  filter(region == \"SNNPR\") \n\ncr_pr\n \n```\n\n### Visualiza os subconjuntos\n\nGráficos `ggplot` para cada subconjunto\n\n```{r}\n\np1 <- cr_oromia %>% \n  ggplot(aes(cultivar, sev2,\n             fill = cultivar)) + \n  geom_boxplot() +\n  theme_few()+\n  scale_fill_few() +\n  labs(y = \"Severity (%)\") +\n  coord_flip()\n\np2 <- cr_pr %>% \n  ggplot(aes(cultivar, sev2,\n             fill = cultivar)) + \n  geom_boxplot() +\n  theme_few()+\n  scale_fill_few() +\n  labs(y = \"Severity (%)\") +\n  coord_flip()\n\n\n\np1\np2\n\n\n\n```\n\n```{r}\n\n\nlibrary(patchwork)\n\n#vamos colocar um gráficos sobre o outro:\n(p1 / p2) + \n  plot_layout(guides = \"collect\",\n              axes = 'collect') +\n  plot_annotation(tag_levels = 'A')\n\n\n```\n\n```{r}\np1 <- cr_oromia %>% \n  ggplot(aes(cultivar, sev2,\n             fill = cultivar)) + \n  geom_boxplot() +\n  theme_few()+\n  scale_fill_few() +\n  labs(y = \"Severity (%)\") +\n  coord_flip()\n\np2 <- cr_pr %>% \n  ggplot(aes(cultivar, sev2,\n             fill = cultivar)) + \n  geom_boxplot() +\n  theme_few()+\n  scale_fill_few() +\n  labs(y = \"Severity (%)\") +\n  coord_flip()\n\n\n\np1\np2\n```\n\n```{r}\nlibrary(patchwork)\n\n# Colcoar título e referencia:\n\n# + ou | coloca um gráfico ao lado do outro. Se coloca / um gráfico fica sobre o outro. \n\n(p1 / p2) + \n  plot_layout(guides = \"collect\",\n              axes = 'collect') +\n  plot_annotation(title = \"Coffe rust in Ethiopia\",\n                  caption = \"source: Del Point (2022)\",\n                  tag_levels = 'A')\n\n\n```\n\n```{r}\n\n\n## inserir um histograma no meu gráfico\n\np3 <- cr_oromia %>% \n  ggplot(aes(x= sev2)) + \n  geom_histogram()\n\np1 + inset_element(p3, left = 0.6, bottom = 0.6, right = 1, top = 1)\n\n\n```\n","srcMarkdownNoYaml":"\n\n\n## Operadores básicos\n\n#### Operador de atribuição\n\n```{r}\n\n# <- \n# =\n\na <- 1\nb = 1\na\n\n```\n\n#### Vetores numéricos - individuais\n\nExemplos de vetores numéricos - Inteiro e decimal\n\n```{r}\n\n\n# Númerico inteiro\nserie1 <- c(1:4)\n\n# Númerico decimal \nserie2 <- c(1.5,2.5,3.5,4.5)\n\n# Caractere\nserie3 <- c(\"um\", \"dois\", \"tres\", \"quatro\")\n\n# Booleano (verdadeiro ou falso)\nserie4 <- c(TRUE, FALSE, FALSE, FALSE)\n\n#serie4: binario \n#Vetores independentes\n\n```\n\n#### Vetor de caractere - individuais\n\n```{r}\n\na <- \"Isabela - qualquer texto com mais de uma palavra\"\na <- c(\"um\", \"dois\", \"tres\")\n\n```\n\n## Criando data frame\n\nNesta etapa iremos criar um dataframe (base de dados) a partir de variaveis individuais que foram criadas previamente. A principal caracteristica de um data frame é possuir linha e colunas.\n\nCria uma tabela com variaveis (pode ser diferentes - numerica inteira, decimal, caractere.. ) de mesmo tamanho para visualizar meus dados.\n\nObs: cars- já é um data frame, que tem o \"speed\" e o \"dist\" como variavel. Se quiser criar um data frame a partir de outro data frame so precisa do sinal de atribuição (<-)\n\n\n\n## Exporando os dados:\n\n### Importa dados\n\n```{r}\n\nlibrary(tidyverse)\n\ncr <- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n\n\n\n\n```\n\n### Aprender a exportação:\n\nPacote que permite fazer essa exportação é **writexl**\n\n-   A partir do data frame vamos exportar para um formato `.xlsx` ou `.csv`\n\n```{r}\n\nlibrary(writexl)\n\nwrite_xlsx(cr, \"cr.xlsx\")\n\nwrite_csv(cr, \"cr.csv\")\n\n\n```\n\n## Funções de manipulação de dados:\n\nIremos rever algumas funções ou verbos do pacote **dplyr**\n\n### `Select()`\n\n-   Variação de como selecionar as colunas utilizando os criterios.\n\n```{r}\n\n# Estou selecionando apenas algumas colunas, 1 a 10 e a coluna 13.\n\ncr %>% \n  select(1:10, 13)\n\n \n# Posso selecionar as coluna por nomes. \n\ncr %>% \n  select(farm, region, inc, sev2)\n\n\n# Selecionei todas as colunas, menos a \"sev2\".\n\ncr %>% \n  select(-sev2)\n\n\n# Para quando tem muitas colunas que quero excluir.\n\ncr %>% \n  select(- c(inc, sev2))\n\n \n\n```\n\n### `Filter()`\n\n-   Filtar apenas linhas especificas.\n\n```{r}\n\ncr %>% \n  select(farm, region, inc) %>% \n  filter(inc > 50)\n\n\ncr %>% \n  select(farm, region, inc) %>% \n  filter(region == \"SNNPR\")\n  \n\n\ncr %>% \n  select(farm, region, zone, inc) %>% \n  filter(zone == \"Bench Maji\")\n\n\n#Estou pegando todas as zonas menos a Bench MAji. **\"!=\"**\ncr %>% \n  select(farm, region, zone, inc) %>% \n  filter(zone != \"Bench Maji\")\n\n\n\n# Criando outro data frame: Criando um subconjunto do \"cr\". \n\ncr2 <- cr %>% \n  select(farm, region, zone, inc) %>% \n  filter(zone != \"Bench Maji\")\n\n\n\n\n\n```\n\n##### Outro operador dentro do filtro que permite selecionar mais de uma condição dentro do nome zone. Estou selecionando duas zonas \"Bench Maji\", \"Keffa\".\n\n`%in%`\n\n```{r}\n\ncr2 <- cr %>% \n  select(farm, region, zone, inc) %>% \n  filter(zone %in% c(\"Bench Maji\", \"Keffa\"))\n\n\n\n\ncr %>% \n  select(farm, region, zone, inc) %>% \n  filter(region == \"SNNPR\") %>% \n  filter(zone != \"Sidama\")\n\n\n```\n\n### Para exportar esse data frame \"cr2\"\n\n```{r}\n\ncr2 <- cr %>% \n  select(farm, region, zone, inc) %>% \n  filter(zone != \"Bench Maji\")\n\n\nwrite_xlsx(cr2, \"cr2.xlsx\")\n\n\n```\n\n### Sumarização\n\n`Count()`: Vai contar alguma coisa, para não ter que ficar contando um por um na tabela.\n\n```{r}\n\ncr %>%\n  count(zone)\n  \n# Contar quantas zonas tenho em cada distrito. Deixa meu arquivo em formato longo, onde repete os nome da zone. \n\ncr %>%\n  count(zone, district)\n\n\n\n```\n\n**OBS:** Podemos fazer a mesma coisa do `count()`, utilizando o `tally()`\n\n`group_by`\n\n```{r}\n\ncr %>%\n  group_by(zone, district) %>% \n  tally()\n\n\n```\n\n### Tabela de contigencia:\n\nPara saber quantas ocorrencias tem, fazendo o cruzamento de region e cultivar, como se fosse uma tabela.\n\nUtiliza o pacote **janitor** que tem a função `tabyl`\n\n-   A função `tabyl` é muito parecido com o `count()`, porém ele tras o nome das zonas, as contagem e o percentual. Isso quando selecionamos apenas uma coluna (zone).\n\n```{r}\n\nlibrary(janitor)\n\ncr %>%\n  tabyl(zone)\n\n\n\n# Tabela de contigencia: \n\ncr %>%\n  tabyl(zone, cultivar)\n\n  \ncr %>%\n  tabyl(cultivar, shade)\n\n\n\n# Separa em duas tabela por região, quando utilizamos 3 variaveis (cultivar, shade, region). \n\ncr %>%\n  tabyl(cultivar, shade, region)\n\n\n```\n\n**OBS:** - Para fazer um gráfico com a tabela de contigencia, é melhor usar o `count()` do que o `tabyl()`, porque ela precisa estar em formato longo. - O tabyl é mais interessante para olhar os valores e não para fazer gráfico.\n\n```{r}\n\ncr %>%\n  count(cultivar, shade)\n\n\n```\n\n\n### `Arrange()`\n\n-   Faz uma reordenação para fins de visualização\n\n```{r}\n\n\n# Ordena do menor para o maior:\ncr %>%\n  count(zone, shade) %>% \n  arrange(n)\n\n# Ordena por ordem alfabetica: \ncr %>%\n  count(zone, shade) %>% \n  arrange(shade)\n\n```\n\n# Exemplo com aplicação e visualização gráfica das funções e verbos do **dplyr**\n\n### Importa os dados\n\n```{r}\n\nlibrary(tidyverse)\ncr <- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\nglimpse(cr)\n\n```\n\n### Visualização\n\n-   Vamos utilizar a função `ggplot` do pacote **ggplot2** para visualizar os dados do conjunto.\n\n```{r}\n\nlibrary(ggthemes)\ncr %>% \n  ggplot(aes(x= sev2, \n             fill = region)) + \n  geom_histogram() + \n  facet_grid(region ~ cultivar) + \n  scale_fill_manual(values = c(\"red\", \"blue\")) +\n  theme_minimal(base_size = 14) + \n  theme(legend.position = \"bottom\") + \n  labs(y  = \"Frequency\", \n       x = \"Severity (%)\", \n       fill = \"Region\" )\n\n\n```\n\n```{r}\n\nglimpse(cr)\nlibrary(ggthemes)\n\ncr %>% \n  ggplot(aes(x= sev2, \n             fill = region)) + \n  geom_histogram(color = \"white\") + \n  facet_wrap(region ~ cultivar, ncol = 2) +\n  scale_fill_manual(values = c(\"red\", \"blue\")) +\n  theme_minimal(base_size = 14) + \n  theme(legend.position = \"bottom\") + \n  labs(y  = \"Frequency\", \n       x = \"Severity (%)\", \n       fill = \"Region\" )\n\n\n\n\n```\n\n```{r}\nsummary(cr$inc)\n\ncr %>% \n  group_by(cultivar) %>% \n  summarize(sev_med= median(sev2), sev_mean = mean(sev2), sev_sd = sd(sev2))\n\ncr %>% \n  ggplot(aes(inc, sev2)) + geom_point()\n```\n\n### Seleção e filtro\n\nSeleção de coluna e filtragem de linhas\n\n```{r}\ncr %>%\n  select( farm, region,cultivar, sev2)\n```\n\n```{r}\ncr2 <- cr %>%\n  select( farm, region,cultivar, sev2)\n```\n\n### Filtra linhas do meu conjunto\n\n```{r}\n\ncr2 <- cr %>% \n  select(farm, region, cultivar, sev2) %>% \n  filter(region == \"Oromia\")\n\ncr2\n```\n\n### Cria subconjuntos\n\nUtiliza as funções `select()` e `filter()` do pacote **dplyr** para selecionar colunas e linhas, respectivamente.\n\n```{r}\n#filtra Oromia\ncr_oromia <- cr %>% \n  select(farm, region, cultivar, sev2) %>% \n  filter(region == \"Oromia\")\n\ncr_oromia\n\n\n\n\n#filtra SNNPR\ncr_pr <- cr %>% \n select(farm, region, cultivar, sev2) %>% \n  filter(region == \"SNNPR\") \n\ncr_pr\n \n```\n\n### Visualiza os subconjuntos\n\nGráficos `ggplot` para cada subconjunto\n\n```{r}\n\np1 <- cr_oromia %>% \n  ggplot(aes(cultivar, sev2,\n             fill = cultivar)) + \n  geom_boxplot() +\n  theme_few()+\n  scale_fill_few() +\n  labs(y = \"Severity (%)\") +\n  coord_flip()\n\np2 <- cr_pr %>% \n  ggplot(aes(cultivar, sev2,\n             fill = cultivar)) + \n  geom_boxplot() +\n  theme_few()+\n  scale_fill_few() +\n  labs(y = \"Severity (%)\") +\n  coord_flip()\n\n\n\np1\np2\n\n\n\n```\n\n```{r}\n\n\nlibrary(patchwork)\n\n#vamos colocar um gráficos sobre o outro:\n(p1 / p2) + \n  plot_layout(guides = \"collect\",\n              axes = 'collect') +\n  plot_annotation(tag_levels = 'A')\n\n\n```\n\n```{r}\np1 <- cr_oromia %>% \n  ggplot(aes(cultivar, sev2,\n             fill = cultivar)) + \n  geom_boxplot() +\n  theme_few()+\n  scale_fill_few() +\n  labs(y = \"Severity (%)\") +\n  coord_flip()\n\np2 <- cr_pr %>% \n  ggplot(aes(cultivar, sev2,\n             fill = cultivar)) + \n  geom_boxplot() +\n  theme_few()+\n  scale_fill_few() +\n  labs(y = \"Severity (%)\") +\n  coord_flip()\n\n\n\np1\np2\n```\n\n```{r}\nlibrary(patchwork)\n\n# Colcoar título e referencia:\n\n# + ou | coloca um gráfico ao lado do outro. Se coloca / um gráfico fica sobre o outro. \n\n(p1 / p2) + \n  plot_layout(guides = \"collect\",\n              axes = 'collect') +\n  plot_annotation(title = \"Coffe rust in Ethiopia\",\n                  caption = \"source: Del Point (2022)\",\n                  tag_levels = 'A')\n\n\n```\n\n```{r}\n\n\n## inserir um histograma no meu gráfico\n\np3 <- cr_oromia %>% \n  ggplot(aes(x= sev2)) + \n  geom_histogram()\n\np1 + inset_element(p3, left = 0.6, bottom = 0.6, right = 1, top = 1)\n\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"funcoes.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","editor":"visual","theme":{"light":"sandstone","dark":"cyborg"},"title":""},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}